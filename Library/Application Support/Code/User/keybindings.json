// Place your key bindings in this file to override the defaults
[
  // ─────────────────────────────────────────────────────────────
  //  Fix Neovim “Z was pressed…”             (place at top)
  //  • Keeps ZZ / ZQ inside real editors
  //  • Lets plain z / Z work in every web‑view (Cursor chat, Jupyter, etc.)
  // ─────────────────────────────────────────────────────────────
  // ─── Wipe ALL Z‑chords everywhere ────────────────────────────────
  //    • deletes Neovim’s ZZ / ZQ / zo / zc …
  //    • deletes VS Code “list.*” chords (zo / zc / za / zm …)
  //    • plain z / Z will now flow straight to the UI / editor
  // ── Remove every Z‑chord everywhere ───────────────────────────────
  // ─── Nuke ALL Z‑chords (Neovim + list navigation) ────────────────
  {
    "key": "z",
    "command": "-vscode-neovim.send"
  },
  { "key": "shift+z", "command": "-vscode-neovim.send" },

  // list.expand  (zo / zO)
  {
    "key": "z o",
    "command": "-list.expand",
    "when": "!editorTextFocus && !inputFocus"
  },
  {
    "key": "z shift+o",
    "command": "-list.expand",
    "when": "!editorTextFocus && !inputFocus"
  },

  // list.collapse (zc / zC)
  {
    "key": "z c",
    "command": "-list.collapse",
    "when": "!editorTextFocus && !inputFocus"
  },
  {
    "key": "z shift+c",
    "command": "-list.collapseAllToFocus",
    "when": "!editorTextFocus && !inputFocus"
  },

  // list.toggleExpand (za / zA)
  {
    "key": "z a",
    "command": "-list.toggleExpand",
    "when": "!editorTextFocus && !inputFocus"
  },
  {
    "key": "z shift+a",
    "command": "-list.toggleExpand",
    "when": "!editorTextFocus && !inputFocus"
  },

  // list.collapseAll (zm / zM)
  {
    "key": "z m",
    "command": "-list.collapseAll",
    "when": "!editorTextFocus && !inputFocus"
  },
  {
    "key": "z shift+m",
    "command": "-list.collapseAll",
    "when": "!editorTextFocus && !inputFocus"
  },

  { "key": "cmd+t", "command": "workbench.action.terminal.focus" },
  {
    "key": "ctrl+`",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+e",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "cmd+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack"
  },
  {
    "key": "cmd+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "shift+cmd+7",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f5",
    "command": "-debug.openView",
    "when": "!debuggersAvailable"
  },
  {
    "key": "f5",
    "command": "language-julia.executeActiveFile",
    "when": "editorLangId == julia"
  },
  {
    "key": "tab",
    "command": "insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "key": "tab",
    "command": "-insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "alt+a",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
  },
  {
    "key": "shift+f5",
    "command": "notebook.execute"
  },
  {
    "key": "cmd+n",
    "command": "markdowntable.nextCell",
    "when": "editorTextFocus && markdowntable.contextkey.selection.InMarkdownTable && !editorReadonly && !editorTabMovesFocus && !inSnippetMode && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "-markdowntable.nextCell",
    "when": "editorTextFocus && markdowntable.contextkey.selection.InMarkdownTable && !editorReadonly && !editorTabMovesFocus && !inSnippetMode && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
  },
  {
    "key": "cmd+enter",
    "command": "pr.createComment"
  },
  {
    "key": "shift+alt+t",
    "command": "go.test.coverage"
  },
  {
    "key": "cmd+v",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "key": "cmd+v",
    "command": "-editor.action.clipboardPasteAction"
  },
  {
    "key": "shift+cmd+v",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "key": "cmd+i",
    "command": "composerMode.agent"
  },
  {
    "key": "shift+cmd+2",
    "command": "composerMode.chat_2"
  },
  {
    "key": "shift+cmd+a",
    "command": "composerMode.chat_2"
  },
  {
    "key": "cmd+f6",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "cmd+f6",
    "command": "chatEditor.action.navigateNext",
    "when": "chat.hasEditorModifications && editorFocus || chat.hasNotebookEditorModifications && editorFocus"
  },
  {
    "key": "alt+f5",
    "command": "-chatEditor.action.navigateNext",
    "when": "chat.hasEditorModifications && editorFocus || chat.hasNotebookEditorModifications && editorFocus"
  },
  {
    "key": "cmd+f6",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+cmd+.",
    "command": "-editor.action.accessibleViewGoToSymbol",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "key": "shift+cmd+j",
    "command": "editor.action.inlineDiffs.nextDiffFile",
    "when": "editorTextFocus && @inlineDiffs.nextDiffFile.hasInlineDiffsInAnyEditor"
  },
  {
    "key": "alt+l",
    "command": "-editor.action.inlineDiffs.nextDiffFile",
    "when": "editorTextFocus && @inlineDiffs.nextDiffFile.hasInlineDiffsInAnyEditor"
  },
  {
    "key": "c",
    "command": "-notebook.cell.copy",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "notebook.cellOutput.copy"
  },
  {
    "key": "a",
    "command": "-notebook.cell.insertCodeCellAboveAndFocusContainer",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "v",
    "command": "-notebook.cell.paste",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "shift+cmd+v",
    "command": "-notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  }
]
